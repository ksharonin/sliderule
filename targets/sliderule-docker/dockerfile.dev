FROM ubuntu:20.04
MAINTAINER JP Swinski (jp.swinski@nasa.gov)

ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  build-essential \
  cmake \
  git \
  wget \
  libreadline-dev \
  liblua5.3-dev \
  zlib1g-dev \
  libcurl4-openssl-dev \
  libssl-dev \
  uuid-dev \
  libpopt-dev \
  liburcu-dev \
  libxml2-dev \
  libnuma-dev \
  python \
  linux-headers-`uname -r` \
  docker.io \
  && rm -rf /var/lib/apt/lists/*

# Disable SSL verification for git cloning over https
RUN git config --global http.sslVerify false

# Install HDF Group Libraries
RUN git clone https://github.com/HDFGroup/hdf5.git && \
  cd hdf5 && \
  git checkout 1.12/master && \
  mkdir build-full && \
  cd build-full && \
  CFLAGS=-fPIC ../configure --prefix=/usr/local --disable-shared --enable-build-mode=production && \
  make -j4 && \
  make install && \
  cd .. && \
  mkdir build-threadsafe && \
  cd build-threadsafe && \
  CFLAGS=-fPIC ../configure --prefix=/usr/local --disable-shared --enable-build-mode=production --enable-threadsafe --disable-hl && \
  make -j4 && \
  make install

RUN git clone https://github.com/lloyd/yajl.git && \
  cd yajl && \
  ./configure && \
  (make -j4 || true) && \
  make install

RUN git clone https://github.com/ICESat2-SlideRule/vol-rest.git && \
  cd vol-rest && \
  git checkout thread_safe_option && \
  ./build_vol_cmake.sh -s -H /usr/local -P /usr/local && \
  cd rest_vol_cmake_build_files/ && \
  make install

# Install Mongoose Library
RUN git clone https://github.com/cesanta/mongoose.git && \
  cd mongoose && \
  gcc -c mongoose.c && \
  gcc-ar crs libmongoose.a mongoose.o && \
  cp libmongoose.a /usr/local/lib && \
  chmod 644 /usr/local/lib/libmongoose.a && \
  mkdir -p /usr/local/include/cesanta && \
  cp mongoose.h /usr/local/include/cesanta && \
  chmod 644 /usr/local/include/cesanta/mongoose.h

# Install Pistache Library
RUN git clone https://github.com/oktal/pistache.git && \
  cd pistache && \
  git submodule update --init && \
  mkdir -p build && \
  cd build && \
  cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DPISTACHE_USE_SSL=true .. && \
  make -j4 && \
  make install

# Install AWS Libraries
RUN git clone https://github.com/aws/aws-sdk-cpp.git && \
  cd aws-sdk-cpp && \
  git checkout version1.8 && \
  mkdir aws_sdk_build && \
  cd aws_sdk_build && \
  cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY="s3;transfer" -DBUILD_SHARED_LIBS=OFF -DENABLE_TESTING=OFF && \
  make -j4 && \
  make install

# Install LTTng-UST
RUN wget --no-check-certificate http://lttng.org/files/lttng-ust/lttng-ust-latest-2.12.tar.bz2 && \
  tar -xf lttng-ust-latest-2.12.tar.bz2 && \
  rm lttng-ust-latest-2.12.tar.bz2 && \
  cd lttng-ust-2.12.* && \
  ./configure && \
  make -j4 && \
  make install

# Configure Installed Libraries
RUN ldconfig