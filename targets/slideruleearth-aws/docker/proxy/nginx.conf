lua_package_path '~/lua/?.lua;;';

resolver 8.8.8.8;

lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
lua_ssl_verify_depth 5;

# cache for discovery metadata documents
lua_shared_dict discovery 1m;

# cache for JWKs
lua_shared_dict jwks 1m;

server {
    listen 8080;

    location / {
        access_by_lua_block {
            local opts = {
                redirect_uri = "/redirect_uri",
                discovery = "https://ps.testsliderule.org/api/oauth2/.well-known/openid-configuration/",
                client_id = "$CLIENT_ID",
                client_secret = "$CLIENT_SECRET",
                scope = "openid introspection profile",
                redirect_uri_scheme = "http",
                logout_path = "/logout",
                use_pkce = true,
            }

            -- call authenticate for OpenID Connect user authentication
            local res, err = require("resty.openidc").authenticate(opts)

            if err then
                ngx.status = 500
                ngx.say(err)
                ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
            end

            -- at this point res is a Lua table with 3 keys:
            --   id_token    : a Lua table with the claims from the id_token (required)
            --   access_token: the access token (optional)
            --   user        : a Lua table with the claims returned from the user info endpoint (optional)

            -- set headers with user info: this will overwrite any existing headers
            -- but also scrub(!) them in case no value is provided in the token
            ngx.req.set_header("X-USER", res.id_token.sub)
        }
        proxy_set_header Host $http_host;
        proxy_pass http://localhost:3000/;
    }

    # Proxy Grafana Live WebSocket connections.
    location /api/live {
        rewrite  ^/(.*)  /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_pass http://localhost:3000/;
    }
}
